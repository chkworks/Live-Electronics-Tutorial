#N canvas 562 78 1048 673 12;
#X obj 694 273 float 5.5;
#X msg 694 232 bang;
#X floatatom 694 306 5 0 0 0 - - - 0;
#X text 564 231 hot inlet =>;
#X msg 625 543 0;
#X text 659 543 reset;
#X obj 809 581 + 1;
#X floatatom 809 625 5 0 0 0 - - - 0;
#X text 793 543 Danger! Infinite Loop!;
#X text 528 506 Counter:;
#X text 845 576 See the Error at Pd's window, f 15;
#X floatatom 651 604 5 0 0 0 - - - 0;
#X obj 651 574 + 1;
#X obj 593 574 float;
#X obj 760 581 float;
#X msg 121 269 4;
#X msg 110 309 1 oi 3 5;
#X msg 121 206 bang;
#X text 77 207 bang;
#X msg 121 242 symbol oi;
#X msg 111 335 list um 2;
#X text 71 242 Symbol;
#X text 175 309 (implicit);
#X text 68 322 List;
#X text 151 268 (implicit);
#X text 74 270 float;
#X msg 280 252 turn on;
#X msg 280 284 open file4.aif;
#X floatatom 277 629 5 0 0 0 - - - 0;
#X symbolatom 106 609 15 0 0 0 - - - 0;
#X msg 106 542 symbol nice;
#X msg 106 573 symbol \$1!!!;
#X text 64 499 Dollar sign variables:;
#X msg 277 595 \$2;
#X msg 277 532 13 12 11;
#X msg 250 501 list one 2 three;
#X msg 293 562 Midi Note 69;
#X text 52 168 Special selectors:;
#X obj 593 507 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 620 505 <= bang GUI (same as "bang" message);
#X obj 760 544 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X msg 280 314 stop;
#X msg 346 252 turn off;
#X text 40 19 A message selector is the first symbol in a message and
defines its data type. The special types are: float \, symbol \, list
\, bang and pointer (this one used for data structures only). The "float"
selector doesn't need to be specified and neither does "list" if its
first element is a float. Other message selectors can be anything else
defined by the user. If a message contains only one symbol \, like
"stop" \, it is considered a selector with no actual message attached.
, f 57;
#X text 281 208 Messages with other selectors:, f 16;
#X text 319 314 just a selector;
#X text 39 382 A dollar sign followed by a number behaves like a variable
in messages. The dollar sign numbers correspond to elements of an incoming
message (number or symbol) \, so "\$1" is the 1st element \, \$2 the
2nd and so on. Note that the message selector does not count as a message
element.;
#X text 794 229 <= cold inlet (updates argument), f 19;
#X text 770 274 <= 5.5 is the argument;
#X text 501 369 Now let's implement a counter. Below \, on the left
\, we have a correct way of doing it. The [float] object outputs the
stored value on bang messages \, which is added to “1” and stored
back in the cold inlet. The example to the right is wrong as the added
number goes back into the hot inlet \, creating an infinite loop \,
where Pd would freeze if it didn’t have a mechanism to break it and
report an error (see "stack overflow" error in terminal window). Click
on the bangs and try it out., f 73;
#X text 492 19 Most objects take creation "arguments" \, which are
initializing parameters. If none are given \, default values are loaded.
For instance \, the [float] object stores numbers it receives in its
inlets \, but it can initially store a number given as an argument.
If no argument is given \, [float] initially stores “0”. The Argument
"5.5" is the initially stored value of the [float] object below. The
inlet to the right stores a new value and overwrites the argument \,
but note that it is not updated inside the object box and the given
argument will still be there when the patch is reloaded., f 74;
#X text 492 144 Usually the left inlet is the "hot inlet" \, which
forces an output \, whereas the others don't and are called "cold inlets".
This is only in respect to control data objects (audio objects generate
data constantly and the hot/cold inlet concept isn't pertinent).,
f 74;
#X floatatom 754 232 4 0 0 0 - - - 0;
#X floatatom 657 232 4 0 0 0 - - - 0;
#X obj 694 339 print;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 54 0;
#X connect 4 0 13 1;
#X connect 6 0 7 0;
#X connect 6 0 14 0;
#X connect 12 0 11 0;
#X connect 12 0 13 1;
#X connect 13 0 12 0;
#X connect 14 0 6 0;
#X connect 30 0 31 0;
#X connect 31 0 29 0;
#X connect 33 0 28 0;
#X connect 34 0 33 0;
#X connect 35 0 33 0;
#X connect 36 0 33 0;
#X connect 38 0 13 0;
#X connect 40 0 14 0;
#X connect 52 0 0 1;
#X connect 53 0 0 0;
