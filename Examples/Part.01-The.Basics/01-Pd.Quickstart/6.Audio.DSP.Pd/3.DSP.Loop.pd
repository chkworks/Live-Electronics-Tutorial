#N canvas 341 79 864 460 12;
#X declare -path else;
#X obj 199 212 +~;
#X obj 242 214 +~ 1;
#X obj 199 164 sig~ 0;
#X obj 511 185 +~;
#X obj 567 188 +~ 1;
#X obj 511 154 sig~ 0;
#X obj 343 161 setdsp~ 1;
#X text 49 14 All processes in a chain of audio objects are performed "at once" for each block. So if an output signal is inserted back as an input earlier in the chain \, we create an infinite loop \, and the computation of that audio chain is turned off., f 56;
#X obj 524 224 send~ \$0-signal;
#X obj 567 161 receive~ \$0-signal;
#X text 490 54 This example uses [send~] and [receive~] \, where the signal connected to [send~] arrives at [receive~] with a delay of one block \, preventing an infinite loop from happening., f 49;
#X obj 695 14 declare -path else;
#X text 49 97 This happens below \, see how the terminal prints an error that says: "DSP loop detected (some tilde objects not scheduled)".;
#N canvas 871 394 360 263 fb 0;
#X obj 152 71 inlet~;
#X obj 152 148 outlet~;
#X connect 0 0 1 0;
#X restore 578 396 pd fb;
#N canvas 696 70 522 258 subpatch 0;
#X obj 105 62 inlet~;
#X obj 106 174 outlet~;
#X obj 105 95 s~ \$0-x;
#X obj 106 141 r~ \$0-x;
#X text 220 77 Even though the connection is broken inside this subpatch with [send~] and [receive~] \, you still have a feedback loop between subpatches in the parent patch \, so this doesn't work., f 30;
#X connect 0 0 2 0;
#X connect 3 0 1 0;
#X restore 529 364 pd subpatch;
#X text 622 361 <= open subpatch;
#X text 94 212 infinite loop:;
#X obj 199 247 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 511 257 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X text 55 299 To avoid an infinite loop \, we need to perform a feedback with a delay of one block of audio. This can be done with native object pais such as: [send~]/[receive~] \, [tabsend~]/[tabreceive~] \, [throw~]/[catch~] and also [delwrite~]/[delread~](or)[delread4~] (delay objects)., f 56;
#X text 502 310 The subpatch below has [send~]/[receive~] but it also generates an infinite loop, f 41;
#X text 55 394 The default block size is 64 \, but we usualy need to perform feedback loops with a block size of just 1 sample \, as we'll do in this tutorial in some examples., f 56;
#X text 700 159 <-- loop/feedback with one block delay, f 20;
#X connect 0 0 1 0;
#X connect 0 0 17 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 8 0;
#X connect 3 0 18 0;
#X connect 4 0 3 1;
#X connect 5 0 3 0;
#X connect 9 0 4 0;
#X connect 13 0 14 0;
#X connect 14 0 13 0;
