#N canvas 191 89 1124 572 12;
#X declare -path else;
#X obj 421 19 declare -path else;
#X obj 106 261 cnv 15 198 138 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array wavetable 512 float 0;
#X coords 0 1 511 -1 200 140 1 0 0;
#X restore 105 260 graph;
#X obj 371 242 nbx 5 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 14 #dcdcdc #000000 #000000 0 256;
#X text 456 240 Hz;
#X obj 371 312 out~;
#X obj 127 204 tabgen wavetable;
#X obj 371 274 wavetable~ wavetable 50;
#X text 21 57 ELSE also provides [tabgen] \, an object that can be used to generate wavetables \, envelopes and more. Check its help file. Below we use it to generate a wave table for [wavetable~]. There are advantages over the 'sinesum' command \, like being able to set arbitrary and non integer partial ratios and initial phase. It can also generate values for any table size., f 79;
#X obj 127 173 initmess sin 1 0 1 2 0 0.5 3 0 -0.5;
#X text 385 166 a sinesum waveform, f 9;
#X text 22 428 By default \, [wavetable~] uses the same 4 point interpolation as [tabosc4~] \, called 'lagrange'. Unlike 'sinesum' \, [tabgen] doesn't generate extra (guard) points and [wavetable~] doesn't need them. These extra points are just copies: you have a copy of the last point in the beggining \, and a copy of the first two in the end (we'll see this in detail later on). Such copies are made internally in [wavetable~] so the table should not have them (hence \, sinesum is not suited for [wavetable~])., f 76;
#X obj 865 372 cnv 15 198 148 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-table 4 float 3;
#A 0 0 1 0 -1;
#X coords 0 1 4 -1 200 150 2 0 0;
#X restore 864 371 graph;
#X obj 604 502 out~;
#X obj 604 342 graph~;
#X msg 619 206 lin;
#X obj 905 307 buffer \$0-table;
#X msg 604 176 lagrange;
#X obj 905 278 initmess 0 1 0 -1;
#X text 649 206 linear: 2 point;
#X text 670 175 default: 4 point;
#X text 603 143 change mode:;
#X msg 642 265 none;
#X text 682 265 no interpolation;
#X obj 604 299 wavetable~ -cos \$0-table 90;
#X msg 631 234 cos;
#X text 663 234 cosine: 2 point;
#X text 612 20 Besides lagrange \, [wavetable~] has other interpolation modes \, they are: 'lin' (linear) and 'cos' (cosine). You can also choose no interpolation ar all., f 63;
#X text 612 73 The 'lin' and 'cos' modes are 2 point interpolation methods. They need a single guard point which is a copy of the first point at the end \, which is also done internally., f 63;
#X text 824 148 The "linear" method draws a line between the two points. The "cosine" method draws half of a cosine cycle to connect the points. Check the difference with a table that only has 4 points in total., f 36;
#X connect 3 0 7 0;
#X connect 7 0 5 0;
#X connect 9 0 6 0;
#X connect 15 0 14 0;
#X connect 16 0 25 0;
#X connect 18 0 25 0;
#X connect 19 0 17 0;
#X connect 23 0 25 0;
#X connect 25 0 15 0;
#X connect 26 0 25 0;
