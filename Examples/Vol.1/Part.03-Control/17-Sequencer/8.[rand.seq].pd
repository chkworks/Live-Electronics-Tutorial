#N canvas 586 23 535 690 12;
#X declare -path else;
#X floatatom 268 354 5 0 0 0 - - -;
#X obj 268 434 mtof;
#X obj 405 378 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 268 404 display;
#X obj 74 411 loadbang;
#X text 114 561 play random notes with different weigths., f 22;
#X obj 268 483 osc~;
#X obj 314 483 decay2~ 50 500;
#X obj 314 461 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 296 514 *~;
#X msg 74 440 60 64 69 71 76;
#X obj 328 418 table \$0-notes 5;
#X obj 74 470 array set \$0-notes;
#X obj 268 378 tabread \$0-notes;
#X obj 236 163 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 106 140 until;
#X obj 106 114 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 236 235 display;
#X text 126 110 generate series;
#X text 36 29 The [rand.seq] object generates a ranodm sequence of
integer numbers. You can use it to generate a dodecaphonic series \,
for instance. Check its help file.;
#X text 36 319 You can also use it to read a sequence of values with
different weights., f 28;
#X obj 296 555 out~;
#X obj 268 301 tempo 60 50 -on;
#X obj 268 331 rand.seq 5 4 1 3 2 1;
#X obj 106 164 rand.seq 12;
#X obj 347 118 declare -path else;
#X obj 236 208 group;
#X connect 0 0 13 0;
#X connect 1 0 6 0;
#X connect 1 0 8 0;
#X connect 3 0 1 0;
#X connect 4 0 10 0;
#X connect 6 0 9 0;
#X connect 7 0 9 1;
#X connect 8 0 7 0;
#X connect 9 0 21 0;
#X connect 10 0 12 0;
#X connect 13 0 3 0;
#X connect 14 0 15 1;
#X connect 14 0 26 0;
#X connect 15 0 24 0;
#X connect 16 0 15 0;
#X connect 22 0 23 0;
#X connect 23 0 0 0;
#X connect 23 1 2 0;
#X connect 24 0 26 0;
#X connect 24 1 14 0;
#X connect 26 0 17 0;
