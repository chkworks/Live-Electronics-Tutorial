#N canvas 991 216 580 641 12;
#X obj 339 378 envelope~;
#X obj 339 346 envgen~;
#X obj 451 332 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 451 359 switch~;
#X obj 181 489 *~;
#X obj 329 140 random 1000;
#X obj 281 139 pipe;
#X obj 281 228 limit;
#X obj 297 32 inlet;
#X obj 181 526 pan2~, f 10;
#X obj 181 580 outlet~;
#X obj 248 580 outlet~;
#X obj 281 259 t b f b, f 17;
#X obj 281 165 b;
#X msg 339 319 0 \$1 1;
#X obj 297 83 limit 1000 1;
#X obj 430 408 rand.f 0.1 1;
#X obj 247 370 rand.f -1 1;
#X obj 281 197 rand.f 50 500;
#X obj 297 112 t b b;
#X obj 339 410 *~ 0;
#X obj 139 436 delread4~ \$2;
#X obj 93 34 inlet~;
#N canvas 796 301 664 399 transp 0;
#X obj 101 65 inlet;
#X obj 101 98 cents2ratio;
#X obj 101 182 *;
#X obj 101 206 t f b;
#X obj 199 136 /;
#X msg 101 129 1 \$1;
#X msg 199 112 1000 \$1;
#X obj 101 153 -;
#X obj 94 288 *~ 0;
#X obj 143 286 r \$0-ms;
#X obj 94 325 outlet~;
#X obj 94 258 phasor~;
#X msg 140 233 0;
#X obj 199 65 inlet;
#X text 207 43 ms;
#X text 100 43 cents;
#X text 294 114 The transposition parameter is in cents \, so we need
to convert to ratio., f 42;
#X text 294 153 To alter the reading speed according to the transposition
parameter \, we use the same structure from the pitch shifting example
implemented with granulation. So we take the grain size in ms and use
it to calculate the hertz input for [phasor~] \, whose output is rescaled
to the grain size in ms in the same way as done before., f 42;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 3 1 12 0;
#X connect 4 0 2 1;
#X connect 5 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 2 0;
#X connect 8 0 10 0;
#X connect 9 0 8 1;
#X connect 11 0 8 0;
#X connect 12 0 11 1;
#X connect 13 0 6 0;
#X restore 104 366 pd transp;
#N canvas 546 388 755 331 pos 0;
#X obj 114 167 +~ 0;
#X obj 114 247 outlet~;
#X obj 115 75 inlet~;
#X obj 198 75 inlet;
#X obj 198 127 rand.f 0 5000;
#X obj 114 203 wrap2~ 0 5000;
#X text 195 51 position;
#X text 115 50 phasor~;
#X text 323 102 now we get the output of [phasor~] and sum it to a
random position parameter. The delay size is fixed to 5000 ms \, so
the random position is within this range., f 48;
#X text 323 170 The [wrap2~] object is here to loop in the case the
random position is close to the delay limit (5000) and exceeds it.
, f 48;
#X connect 0 0 5 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 0 1;
#X connect 5 0 1 0;
#X restore 139 403 pd pos;
#X text 343 479 This patch is used inside [clone] in one of the examples.
, f 20;
#X obj 68 322 rand.f -1200 1200;
#X text 46 173 The only differences are in [pd transp] and [pd pos]
subpatches \, check it out., f 27;
#X text 45 129 Now we have to read the ring buffer from [delread4~].
, f 28;
#X connect 0 0 20 0;
#X connect 1 0 0 0;
#X connect 1 1 2 0;
#X connect 2 0 3 0;
#X connect 4 0 9 0;
#X connect 5 0 6 1;
#X connect 6 0 13 0;
#X connect 7 0 12 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 12 0 17 0;
#X connect 12 0 26 0;
#X connect 12 0 24 1;
#X connect 12 1 7 1;
#X connect 12 1 14 0;
#X connect 12 1 23 1;
#X connect 12 2 16 0;
#X connect 13 0 18 0;
#X connect 14 0 1 0;
#X connect 15 0 19 0;
#X connect 16 0 20 1;
#X connect 17 0 9 1;
#X connect 18 0 7 0;
#X connect 19 0 6 0;
#X connect 19 1 5 0;
#X connect 20 0 4 1;
#X connect 21 0 4 0;
#X connect 23 0 24 0;
#X connect 24 0 21 0;
#X connect 26 0 23 0;
