#N canvas 825 46 529 627 12;
#X declare -path else;
#X msg 272 404 stop;
#X obj 229 549 out~;
#X msg 164 233 show;
#X msg 116 233 hide;
#X text 204 233 <= shows and hides internal buffer;
#X obj 350 16 declare -path else;
#X obj 164 271 sample~ \$0-sample bubul.wav;
#X msg 279 430 pause;
#X msg 286 457 resume;
#X text 25 51 The [sample~] object from the ELSE library is a convenient
abstraction based on [soundfiler] that can load a sample into an internal
table. It can also be used to create an audio buffer that you can record
into as we'll show later in this section of the tutorial. One advantage
of [sample~] is that it can be used to load multi channel files. Check
its help file for more details., f 66;
#X msg 251 331 play;
#X obj 229 331 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 207 331 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X msg 259 356 play 2000 4000 50;
#X msg 266 377 play 3000 6000 -150;
#X obj 366 547 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 387 548 done;
#X msg 291 485 reset \, speed 100;
#X text 388 355 set start \, end;
#X text 423 371 and speed;
#X text 25 143 Below \, [sample~] loads a single channel file (the
same as last example). Its outlet also outputs the table size in samples
(the output is actually a list with size \, sample rate and number
of channels) \, so we have basically the same thing as the last example.
, f 66;
#X text 31 444 The [tabplayer~] object from ELSE is also a much more
powerful alternative to [tabplay~] that offers different reading speeds
and also has multi-channel support. Check its help file., f 26;
#X obj 229 513 tabplayer~ \$0-sample;
#X connect 0 0 22 0;
#X connect 2 0 6 0;
#X connect 3 0 6 0;
#X connect 7 0 22 0;
#X connect 8 0 22 0;
#X connect 10 0 22 0;
#X connect 11 0 22 0;
#X connect 12 0 22 0;
#X connect 13 0 22 0;
#X connect 14 0 22 0;
#X connect 17 0 22 0;
#X connect 22 0 1 0;
#X connect 22 1 15 0;
