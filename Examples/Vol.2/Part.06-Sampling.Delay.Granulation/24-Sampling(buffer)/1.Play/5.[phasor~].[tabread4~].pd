#N canvas 453 114 961 702 12;
#X declare -path else;
#X obj 728 345 phasor~;
#X obj 728 404 tabread4~ \$0-buffer;
#X obj 648 234 nbx 5 18 -1e+37 1e+37 0 0 empty tempo empty 0 -8 0 13
-228856 -1 -1 100 256;
#X floatatom 112 435 0 0 0 0 - - -;
#X floatatom 192 492 0 0 0 0 - - -;
#X obj 112 517 s \$0-size;
#X obj 648 260 / 100;
#X obj 728 234 nbx 5 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 13
-228856 -1 -1 0 256;
#X obj 728 294 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 1 256;
#X text 799 234 Cents;
#X obj 728 263 cents2ratio;
#X obj 728 439 out~;
#X text 250 491 <= Reading frequency, f 21;
#X text 574 234 Speed (%);
#X text 789 293 Ratio;
#X obj 552 421 initmess \; tempo 100;
#X obj 728 372 *~;
#X obj 763 372 r \$0-size;
#X obj 763 316 r \$0-hz;
#X obj 192 519 s \$0-hz;
#X obj 728 316 *~;
#X obj 192 463 /;
#X text 249 405 <= sample rate, f 15;
#X text 515 153 We need to multiply the output of [phasor~] by the
number of samples in the file so we can access the indexes from the
array., f 57;
#X obj 355 537 cnv 15 385 140 empty empty empty 20 12 0 14 -233017
-66577 0;
#X text 373 541 Interpolation error:;
#X obj 552 378 sr~ 44100;
#X text 374 561 Interpolation can add noise artifacts. To reduce this
error you can work with files with higher sample rates than Pd is running
\, such as 88.2 KHz sound file when running at 44.1 Khz as in this
example., f 50;
#X text 374 636 You can use a good resampling software to upsample
a sound file as was done here for this example., f 50;
#X obj 171 373 unpack;
#X floatatom 210 405 5 0 0 0 - - -;
#X obj 185 435 swap;
#X text 51 435 size =>;
#X text 35 206 In this example we use [phasor~] to read from [tabread4~].
The [phasor~] object is used to play the sample in a loop \, and we
need to find the frequency corresponding to the sound file's period.
We do that by dividing the sample rate of the file (even if it's different
than Pd's) by the number of samples - both information are given by
[sample~] (one could use [soundfiler] instead \, in which [sample~]
is based on)., f 63;
#X obj 760 45 declare -path else;
#X obj 171 343 sample~ \$0-buffer sax.wav;
#X text 515 74 We use a ratio value to set the speed \, this can also
be calculated from cents or a percentage value. Then \, all you need
is to multiply the ratio by the frequency in hertz. Note that negative
percentage/ratio values are possible and that they play the file backwards.
, f 57;
#X text 35 35 The [tabplayer~] object from ELSE plays a buffer at different
speeds. In vanilla \, you need to read a buffer with [tabread4~] \,
which performs interpolation., f 63;
#X text 35 83 Hence \, you can then set any reading speed (such as
1.5x) \, which means the reading point will fall in between samples
\, thus you need to interpolate to get a value that better corresponds
to that missing step in between. We'll see the interpolation type of
[tabread4~] a bit later., f 63;
#X text 35 158 You can also play files with a different sample rate
than Pd is running \, because you can compensate the difference by
setting a difference speed., f 63;
#X connect 0 0 16 0;
#X connect 1 0 11 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 19 0;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 20 0;
#X connect 10 0 8 0;
#X connect 16 0 1 0;
#X connect 17 0 16 1;
#X connect 18 0 20 1;
#X connect 20 0 0 0;
#X connect 21 0 4 0;
#X connect 29 0 31 0;
#X connect 29 0 3 0;
#X connect 29 1 30 0;
#X connect 30 0 31 1;
#X connect 31 0 21 0;
#X connect 31 1 21 1;
#X connect 35 0 29 0;
