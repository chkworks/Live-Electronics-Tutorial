#N struct 1003-DS float color;
#N struct 1003-fill float color;
#N canvas 497 74 909 361 12;
#X declare -path else;
#X obj 157 283 pointer;
#N canvas 233 225 985 322 template-1 0;
#X obj 611 198 drawpolygon color 20 0 25 95 25;
#X obj 145 270 drawnumber color 100 20 color color=;
#X text 523 22 And now we include a shape in the data structure object.
This shape is a simple line drawn with the [drawpolygon] object. The
first argument is a float that defines the color. Again \, we use the
"color" float as defined in [struct]., f 57;
#X text 523 104 The second argument is the line width of the polygon
in pixels. The next arguments are pairs of point coordinates to connect
with the line. Here we have just two pairs of coordinates (0/25) and
(95/25) - so a line is drawn to connect these two dots., f 57;
#X text 533 247 Note that both the "color" number and the line part
of the same Data Structures template. This means both drawings form
a single graphic object.;
#X text 96 45 Data Structure named "\$0-DS" holding a float called
"color"., f 35;
#X obj 120 107 struct \$0-DS float color;
#X text 48 153 The [drawnumber] now has more arguments. Besides the
float name to draw \, we have three number values. The two first ones
are the "x/y" coordinates (100/20). The third value defines the color
of the number and is defined by the variable (or 'field') named "color".
The last argument is a label for the number display., f 58;
#X restore 156 126 pd template-1;
#N canvas 853 155 438 542 template-2 0;
#X obj 67 171 drawnumber color 105 50 color color=;
#X text 53 142 Draw instructions for the "color" float.;
#X obj 62 474 filledpolygon color 0 5 0 105 100 105 50 60;
#X obj 66 317 drawpolygon color 5 0 5 100 5 50 55 0 5;
#X obj 101 85 struct \$0-fill float color;
#X text 93 38 Data Structure named "\$0-fill" holding a float called
"color"., f 31;
#X text 45 219 Here we have a polygon with four coordinate pair points
\, which form a triangle. The first argument takes the name of the
'color' varable (or 'field') \, which is also drawn by [drawnumber].
, f 44;
#X text 55 369 The [filledpolygon] needs an extra first argument to
set the internal color and also uses here the 'color' field name for
that. It doesn't need to close the shape with four coordinate points
to draw a triangle - three points is already enough to draw the shape.
, f 44;
#X restore 565 138 pd template-2;
#X obj 34 321 append \$0-DS color;
#N canvas 619 501 301 150 \$0-display-1 1;
#X scalar 1003-DS 500 \;;
#X restore 271 126 pd \$0-display-1;
#N canvas 1026 469 284 191 \$0-display-2 1;
#X scalar 1003-fill 465 \;;
#X restore 670 138 pd \$0-display-2;
#X msg 287 167 clear \, vis 1;
#X obj 34 256 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 287 194 s pd-\$0-display-1;
#X obj 611 273 pointer;
#X msg 753 167 clear \, vis 1;
#X obj 474 261 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 753 194 s pd-\$0-display-2;
#X obj 474 302 append \$0-fill color;
#X obj 34 126 loadbang;
#X obj 725 25 declare -path else;
#X obj 157 240 message traverse pd-\$0-display-1 \, bang, f 33;
#X msg 34 215 500;
#X msg 474 223 450;
#X text 27 26 Now let's have more fun with drawing instructions and
insert a simple line shape with [drawpolygon]. See the [pd template-1]
subpatch. Data is displayed on the [pd \$0-display-1] subpatch \, click
and drag the number in it to see the colors change., f 54;
#X obj 34 180 trigger bang bang bang;
#X obj 474 185 trigger bang bang bang, f 36;
#X obj 474 138 loadbang;
#X obj 611 231 message traverse pd-\$0-display-2 \, bang, f 33;
#X text 466 59 Next \, we draw a bit less simple shapes and also use
the [filledpolygon] object. See the [pd template-2] subpatch for more
details. You can also click and drag the number to change colors.,
f 56;
#X connect 0 0 3 1;
#X connect 6 0 8 0;
#X connect 7 0 3 0;
#X connect 9 0 13 1;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X connect 14 0 20 0;
#X connect 16 0 0 0;
#X connect 17 0 7 0;
#X connect 18 0 11 0;
#X connect 20 0 17 0;
#X connect 20 1 16 0;
#X connect 20 2 6 0;
#X connect 21 0 18 0;
#X connect 21 1 23 0;
#X connect 21 2 10 0;
#X connect 22 0 21 0;
#X connect 23 0 9 0;
