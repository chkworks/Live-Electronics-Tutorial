#N struct 1003-DS float x float y array 1003-table 1003-element;
#N struct 1003-element symbol sym float y;
#N canvas 368 61 597 579 12;
#X obj 475 341 pointer;
#N canvas 317 275 503 265 template 0;
#X text 91 183 Drawing instructions;
#X obj 243 184 plot \$0-table 900 2 0 0 120;
#X obj 59 127 struct \$0-DS float x float y array \$0-table \$0-element
;
#X text 73 46 Data Structure named "\$0-DS" holding coordinates floats
"x/y" and an array named "\$0-table" using the element struct named
"\$0-element" defined in the other subpatch., f 48;
#X restore 387 129 pd template;
#X obj 366 371 append \$0-DS x y;
#X msg 36 326 n \, dump;
#X obj 36 422 t s b;
#X obj 246 383 + 1;
#X obj 215 383 f;
#X obj 234 486 array size -s \$0-DS \$0-table;
#X text 261 461 <= sets size;
#X floatatom 234 460 3 0 0 0 - - - 0;
#X obj 36 358 dir, f 5;
#X obj 215 412 element \$0-DS \$0-table;
#X msg 233 358 0;
#X text 96 325 <= click;
#X text 82 528 To set a symbol \, the [set] object needs a -symbol
flag!;
#N canvas 601 209 725 334 \$0-display 1;
#X scalar 1003-DS 10 250 \; 1.Array.pd -85 \; 2.[element].pd -57 \;
3.curve.pd -24 \; 4.[array].pd -74 \; 5.symbol.pd -106 \; 6.x-y.pd
-81 \; \;;
#X coords 0 334 1 333 0 0 0;
#X restore 387 155 pd \$0-display;
#X obj 76 110 initmess \; pd-\$0-display clear \, vis 1 \; \$0-pointer
traverse pd-\$0-display \, bang \; \$0-coords 10 250;
#X obj 475 311 r \$0-pointer;
#X obj 366 330 r \$0-coords;
#N canvas 431 307 458 362 \$0-element 0;
#X obj 59 224 filledpolygon 0 0 1 -2 -2 2 -2 2 2 -2 2;
#X text 58 194 draw a black dot to represent the value:;
#X obj 202 286 drawsymbol sym 0 -5;
#X text 58 268 We add a drawing instruction for it as well, f 17;
#X text 41 68 We also include the field name 'y' \, which is the vertical
coordinate. This allows the element to be dragged horizontally., f
48;
#X text 42 15 The element of the array is defined as a struct of name
"\$0-element" containing a symbol named "sym"., f 47;
#X obj 86 139 struct \$0-element symbol sym float y;
#X restore 387 103 pd \$0-element;
#X obj 36 486 set -symbol \$0-element sym;
#X obj 57 386 t f b;
#X text 39 26 This example shows how to create an array composed of
symbols. In this case \, the [array] object can't be used instead of
[element] and [set]. But we can still use [array] instead of [setsize]/[getsize].
, f 70;
#X text 30 198 When loading the array \, we have only one element \,
not initialized. With the [dir] object from ELSE \, we get the file
names contained in this folder and insert them into the array. The
'n' message sends the number of files in the folder to the right outlet
\, which we use to set the array's size. Then \, the dump message sends
a series of symbols with the file names that we use to populate the
array with the [element] and [set] objects., f 75;
#X connect 0 0 2 2;
#X connect 2 0 7 1;
#X connect 2 0 11 1;
#X connect 3 0 10 0;
#X connect 4 0 20 0;
#X connect 4 1 6 0;
#X connect 5 0 6 1;
#X connect 6 0 5 0;
#X connect 6 0 11 0;
#X connect 9 0 7 0;
#X connect 10 0 4 0;
#X connect 10 2 21 0;
#X connect 11 0 20 1;
#X connect 12 0 6 1;
#X connect 17 0 0 0;
#X connect 18 0 2 0;
#X connect 21 0 9 0;
#X connect 21 1 12 0;
