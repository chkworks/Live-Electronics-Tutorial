#N canvas 412 23 554 561 12;
#X declare -path else;
#X obj 121 434 *~;
#X obj 63 381 osc~ 440;
#X obj 171 290 nbx 5 17 0 2000 0 0 empty empty empty 0 -8 0 12 #dcdcdc #000000 #000000 0 256;
#X obj 131 287 bng 25 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 121 475 out~;
#X obj 139 325 f 500;
#X text 174 268 ms;
#X obj 139 381 envgen~;
#X text 334 283 Generates hann table;
#X msg 139 354 0 \$1 1;
#X obj 354 28 declare -path else;
#X obj 317 425 array define \$0-hann 1024;
#X obj 354 379 tabgen \$0-hann;
#X msg 354 348 hanning;
#X obj 354 318 loadbang;
#X obj 139 409 tabreader~ \$0-hann;
#X text 50 66 Now let's see some more convenient solutions with objects from the ELSE library. Let's have a first superficial look into the [tabreader~] object \, which is similar to [tabread4~] \, but by default it has an index input from 0 to 1 \, which makes us not worry about the table size and index range., f 63;
#X text 50 145 You also don't need to worry about guard points. The [tabgen] object generates functions without guard points so they are a good match. The [tabreader~] object considers the input phase to be circular \, which means that a phase of 1 is the same as 0 \, so the end of the table is actually the beggining. The default interpolation of [tabreader~] is the same as [tabread4~] but it has other options that we'll see later in this tutorial., f 63;
#X obj 311 501 tabreader;
#X text 390 494 control version of [tabreader~], f 15;
#X text 309 471 see also:;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 5 1;
#X connect 3 0 5 0;
#X connect 5 0 9 0;
#X connect 7 0 15 0;
#X connect 9 0 7 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 15 0 0 1;
