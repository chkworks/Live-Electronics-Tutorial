#N canvas 178 32 1014 671 12;
#X declare -path else;
#X obj 339 27 declare -path else;
#X text 30 72 A "CV" control depends on a voltage range used by a module \, but there’s no single standard for this. You can have +/- 5v as a usual standard for AC (alternate current) \, also called ‘bipolar’ signal \, but unipolar standards also exists \, with different possible values \, such as from 0 to +5v \, 0 to +8v and 0 to +10v., f 64;
#X text 30 155 A safe bet is that you’ll never see a control voltage signal lower than -10 volts or higher than +10 volts and that’s because of the limitations of the power supply standard. Trigger and gate/pulses jump from 0 to a positive extreme \, so modules will usually respond to impulse/gate values of +5v. What the CV controls in terms of absolute values is always dependant on the module itself. This is quite different than in Pd where you can use a signal with a very specific value like ‘100’ to control the attack phase of an envelope. If you’re using CV to control the attack value of a module you have to tune it by ear. Usually you have a knob in the module to set the amount of CV that is controlling the parameter., f 64;
#X text 30 338 When it comes to control the frequency of an oscillator \, there’s also no standard and no way to know what a specific voltage value represents in terms of frequency. You usually calibrate and have a knob to tune your oscillator at a reference voltage value. The only golden rule and standard is that a change of 1 volt represents a shift in one octave. Hence \, 0.5 is half an octave (a tritone) \, 2V is two octaves and so on., f 64;
#X text 30 445 The audible signal range in Pure Data is composed of amplitude values from -1 to 1 and we can use it to send CV to analog gear. Conversely \, we can receive CV from an external source in this -1 to 1 range. You need special hardware for this which is used to calibrate digital audio to the CV range used in your modular system. It could \, for instance \, correspond to a -5V to +5V range \, or a 0V to +10V instead \, both of which are very common., f 64;
#X text 30 555 The peak to peak amplitude in both cases is "10" \, which means you can have 10 octaves. This is more good enough. The piano has 8 octaves \, for instance. If you start at 20 Hz \, you have 20.48 Khz 10 octaves above \, so it even exceedes a bit the ideal audible range of humans. The MIDI range \, by the way \, has a range of 10 octaves plus a 5th (from 0 to 127)., f 64;
#X obj 784 195 hsl 162 19 -1 1 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 781 224 rescale -1 1 0 120;
#X obj 781 251 mtof;
#X floatatom 781 280 10 0 0 0 - - - 16;
#X obj 851 333 osc~ 1;
#X obj 851 361 rescale~ 0 120;
#X obj 851 391 mtof~;
#X obj 851 425 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 762 357 setdsp~;
#X text 518 33 Let's consider a reference pitch of middle C (C4) to 0 volts and use a CV value of -5v to 5v to transpose this pitch. This means it goes down 5 octaves and up 5 octaves \, so the range is from C-1 and C9. In MIDI \, this is from 0 to 120! Now let's consider the -1 to 1 digital signal as the -5v to +5V range. The patch below makes such a conversion., f 62;
#X obj 554 151 hsl 162 19 -1 1 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 551 179 7 0 0 0 - - - 12;
#X obj 551 209 * 5;
#X floatatom 551 238 7 0 0 0 - - - 12;
#X text 608 239 volts;
#X obj 551 265 * 12;
#X floatatom 551 295 7 0 0 0 - - - 12;
#X text 609 294 semitones;
#X obj 551 325 + 60;
#X text 596 326 middle C;
#X floatatom 551 354 7 0 0 0 - - - 12;
#X obj 551 387 mtof;
#X floatatom 551 417 7 0 0 0 - - - 12;
#X text 778 152 A more straightforward conversion:, f 22;
#X text 608 355 MIDI pitch;
#X text 610 417 Frequency;
#X obj 563 478 hsl 162 19 0 127 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 560 508 7 0 0 0 - - - 12;
#X obj 560 573 rescale~ 0 127 -1 1;
#X obj 560 612 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 560 541 sig~;
#X text 753 515 The example above could be considered a conversion from CV to MIDI. We now do the opposite., f 29;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 24 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 32 0 33 0;
#X connect 33 0 36 0;
#X connect 34 0 35 0;
#X connect 36 0 34 0;
